<?xml version="1.0"?>

<project name="crawler" default="usage" xmlns:artifact="antlib:org.apache.maven.artifact.ant">

  <target name="usage" description="How to see all the targets">
    <echo>USAGE: ant -projecthelp</echo>
    <echo>NOTE: Read the README.txt</echo>
  </target>

  <target name="init" description="Init all parameters and other settings">
    <property file="local.build.properties"/>
    <property file="build.properties"/>

    <artifact:remoteRepository id="wyona.remote.repository" url="http://www.wyona.org/maven2/"/>

    <artifact:dependencies pathId="maven2.classpath" filesetId="maven2.fileset">
      <remoteRepository refid="wyona.remote.repository"/>
      <dependency groupId="log4j" artifactId="log4j"
                  version="1.2.8"/>
      <dependency groupId="jakarta-regexp" artifactId="jakarta-regexp"
                  version="1.4"/>
      <dependency groupId="xml-resolver" artifactId="xml-resolver"
                  version="1.2"/>
      <dependency groupId="jtidy" artifactId="jtidy"
                  version="4aug2000r7-dev"/>
      <dependency groupId="commons-io" artifactId="commons-io"
                  version="1.2"/>
      <dependency groupId="commons-collections" artifactId="commons-collections"
                  version="3.2"/>
      <dependency groupId="xerces" artifactId="xercesImpl"
                  version="2.7.1"/>
      <dependency groupId="xml-apis" artifactId="xml-apis"
                  version="1.3.02"/>
                  
    </artifact:dependencies>
    <property name="maven2.cp" refid="maven2.classpath"/>

    <property name="classes.dir" value="${build.dir}/classes"/>

    <path id="classpath.core">
      <fileset dir="lib">
        <include name="*.jar"/>
      </fileset>
      <pathelement path="${maven2.cp}"/>
    </path>

    <path id="classpath.impl">
      <fileset dir="lib">
        <include name="*.jar"/>
      </fileset>
      <pathelement path="${classes.dir}"/>
      <pathelement path="${maven2.cp}"/>
    </path>

    <path id="classpath.examples">
      <fileset dir="lib">
        <include name="*.jar"/>
      </fileset>
      <pathelement path="${classes.dir}"/>
      <pathelement path="${maven2.cp}"/>
    </path>

    <path id="classpath.run">
      <fileset dir="lib">
        <include name="*.jar"/>
      </fileset>
      <pathelement path="${classes.dir}"/>
      <pathelement path="lib"/> <!-- log4j.properties -->
      <pathelement path="build/repository"/> <!-- repository configs -->
      <pathelement path="${maven2.cp}"/>
    </path>

    <property name="crawler.xconf" value="crawler.xconf"/>
  </target>

  <target name="compile" description="Compile Java classes" depends="init">
    <echo>${classes.dir}</echo>
    <mkdir dir="${classes.dir}"/>
    <javac srcdir="src/java" destdir="${classes.dir}"
           classpathref="classpath.core"
           debug="true"
           source="${source.java.version}"
           target="${target.java.version}"
    />
  </target>

  <target name="jar" description="Create a jar file" depends="init,compile">
    <mkdir dir="build/lib"/>

    <jar
      destfile="build/lib/apache-lenya-crawler-${crawler.version}-r${subversion.revision}.jar"
      basedir="build/classes"
    >
    <!--
      <manifest>
        <attribute name="main-class" value="org.wyona.yarep.examples.HelloWorld"/>
      </manifest>
    -->
    </jar>
  </target>

  <target name="install-jar" description="Place jar into local maven repository" depends="init,jar">
    <copy file="src/core/pom.xml" tofile="build/lib/pom-core.xml"/>
    <replace file="build/lib/pom-core.xml" value="${yarep.version}-r${subversion.revision}">
      <replacetoken>@VERSION@</replacetoken>
    </replace>

    <artifact:pom id="maven.project.core" file="build/lib/pom-core.xml"/>
  
    <artifact:install file="build/lib/yarep-core-${yarep.version}-r${subversion.revision}.jar">
      <pom refid="maven.project.core"/>
    </artifact:install>

    <copy file="src/impl/pom.xml" tofile="build/lib/pom-impl.xml"/>
    <replace file="build/lib/pom-impl.xml" value="${yarep.version}-r${subversion.revision}">
      <replacetoken>@VERSION@</replacetoken>
    </replace>

    <artifact:pom id="maven.project.impl" file="build/lib/pom-impl.xml"/>
  
    <artifact:install file="build/lib/yarep-impl-${yarep.version}-r${subversion.revision}.jar">
      <pom refid="maven.project.impl"/>
    </artifact:install>
  </target>

  <target name="clean" description="Clean Build" depends="init">
    <delete dir="${build.dir}"/>
  </target>

  <target name="javadoc" description="Generate Javadoc" depends="init">
    <javadoc
      packagenames="org.*"
      sourcepath="src/core/java"
      destdir="build/javadoc"
    >
    </javadoc>
  </target>

<target name="crawl" description="Crawl and dump hypertext documents. Usage: -Dcrawler.xconf=/foo/bar/crawler.xconf (IMPORTANT NOTE: Use an absolute path to specify the crawler.xconf file" depends="init">
  <echo>INFO: Crawl and dump hypertext documents (${crawler.xconf})</echo>

  <echo>INFO: Show configuration</echo>
  <java classname="org.apache.lenya.search.crawler.CrawlerConfiguration">
    <arg value="${crawler.xconf}"/>
    <classpath refid="classpath.run"/>
  </java>


  <echo>INFO: START crawling ...</echo>
  <java classname="org.apache.lenya.search.crawler.IterativeHTMLCrawler">
    <arg value="${crawler.xconf}"/>
    <classpath refid="classpath.run"/>
  </java>
  <echo>INFO: Crawling finished</echo>

</target>

</project>

<?xml version="1.0"?>

<project name="crawler" default="usage" xmlns:artifact="antlib:org.apache.maven.artifact.ant">

  <target name="usage" description="How to see all the targets">
    <echo>USAGE: ant -projecthelp</echo>
    <echo>NOTE: Read the README.txt</echo>
  </target>

  <target name="init" description="Init all parameters and other settings">
    <property file="local.build.properties"/>
    <property file="build.properties"/>

    <artifact:remoteRepository id="wyona.remote.repository" url="http://www.wyona.org/maven2/"/>

    <artifact:dependencies pathId="maven2.classpath" filesetId="maven2.fileset">
      <remoteRepository refid="wyona.remote.repository"/>
      <dependency groupId="log4j" artifactId="log4j"
                  version="1.2.8"/>
      <dependency groupId="jakarta-regexp" artifactId="jakarta-regexp"
                  version="1.4"/>
      <dependency groupId="xml-resolver" artifactId="xml-resolver"
                  version="1.2"/>
      <dependency groupId="jtidy" artifactId="jtidy"
                  version="4aug2000r7-dev"/>
      <dependency groupId="commons-io" artifactId="commons-io"
                  version="1.2"/>
      <dependency groupId="commons-collections" artifactId="commons-collections"
                  version="3.2"/>

<!--
      <dependency groupId="avalon-framework" artifactId="avalon-framework-api"
                  version="4.1.5"/>
      <dependency groupId="avalon-framework" artifactId="avalon-framework-impl"
                  version="4.1.5"/>
      <dependency groupId="apache-jakarta-commons" artifactId="apache-jakarta-commons-id"
                  version="0.1-dev-lcr357257"/>
      <dependency groupId="wyona-org-commons" artifactId="wyona-org-commons"
                  version="0.0.1-dev-r17376"/>
      <dependency groupId="svnkit" artifactId="svnkit"
                  version="1.1.0"/>
-->

      <!-- Runtime libs -->
      <!-- IMPORT: xerces 2.7.1 is dependent on xml-apis 1.3.02 -->
<!--
      <dependency groupId="xerces" artifactId="xercesImpl"
                  version="2.7.1"/>
      <dependency groupId="xml-apis" artifactId="xml-apis"
                  version="1.3.02"/>
      <dependency groupId="xml-resolver" artifactId="xml-resolver"
                  version="1.1"/>
      <dependency groupId="apache-jakarta-commons" artifactId="apache-jakarta-commons-discovery"
                  version="0.2"/>
      <dependency groupId="apache-jakarta-commons" artifactId="apache-jakarta-commons-logging"
                  version="1.0.4"/>
      <dependency groupId="hsqldb" artifactId="hsqldb"
                  version="1.8.0.7"/>
      <dependency groupId="postgresql" artifactId="postgresql"
                  version="7.4.1-jdbc3"/>
-->
    </artifact:dependencies>
    <property name="maven2.cp" refid="maven2.classpath"/>

    <property name="classes.dir" value="${build.dir}/classes"/>

    <path id="classpath.core">
      <fileset dir="lib">
        <include name="*.jar"/>
      </fileset>
      <pathelement path="${maven2.cp}"/>
    </path>

    <path id="classpath.impl">
      <fileset dir="lib">
        <include name="*.jar"/>
      </fileset>
      <pathelement path="${classes.dir}"/>
      <pathelement path="${maven2.cp}"/>
    </path>

    <path id="classpath.examples">
      <fileset dir="lib">
        <include name="*.jar"/>
      </fileset>
      <pathelement path="${classes.dir}"/>
      <pathelement path="${maven2.cp}"/>
    </path>

    <path id="classpath.run">
      <fileset dir="lib">
        <include name="*.jar"/>
      </fileset>
      <pathelement path="${classes.dir}"/>
      <pathelement path="lib"/> <!-- log4j.properties -->
      <pathelement path="build/repository"/> <!-- repository configs -->
      <pathelement path="${maven2.cp}"/>
    </path>
  </target>

  <target name="compile" description="Compile Java classes" depends="init">
    <echo>${classes.dir}</echo>
    <mkdir dir="${classes.dir}"/>
    <javac srcdir="src/java" destdir="${classes.dir}"
           classpathref="classpath.core"
           debug="true"
           source="${source.java.version}"
           target="${target.java.version}"
    />
  </target>

  <target name="compile-impl" description="Compile Java classes of Implementation" depends="init">
    <echo>${classes.dir}</echo>
    <mkdir dir="${classes.dir}"/>
    <javac srcdir="src/impl" destdir="${classes.dir}"
           classpathref="classpath.impl"
           debug="true"
    />
  </target>

  <target name="compile-examples" description="Compile Java classes of examples" depends="init,compile">
    <echo>${classes.dir}</echo>
    <mkdir dir="${classes.dir}"/>
    <javac srcdir="src/test" destdir="${classes.dir}"
           classpathref="classpath.examples"
           debug="true"
           source="${source.java.version}"
           target="${target.java.version}"
    />
    <copy file="src/test/java/yarep.properties" todir="${classes.dir}"/>
  </target>

  <target name="build-examples" description="Build examples" depends="init,compile-examples,compile-impl">
    <copy todir="${build.dir}/repository">
      <fileset dir="src/test/repository"/>
    </copy>

    <mkdir dir="build/lib"/>
  </target>

  <target name="jar" description="Create jar files for core and impl" depends="init,compile,compile-impl">
    <mkdir dir="build/lib"/>

    <jar
      destfile="build/lib/yarep-core-${yarep.version}-r${subversion.revision}.jar"
      basedir="build/classes"
      excludes="org/wyona/yarep/examples/**,org/wyona/yarep/tests/**,org/wyona/yarep/impl/**,org/wyona/yarep/core/impl/**,yarep.properties"
    >
    <!--
      <manifest>
        <attribute name="main-class" value="org.wyona.yarep.examples.HelloWorld"/>
      </manifest>
    -->
    </jar>

    <jar
      destfile="build/lib/yarep-impl-${yarep.version}-r${subversion.revision}.jar"
      basedir="build/classes"
      includes="org/wyona/yarep/impl/**,org/wyona/yarep/core/impl/**"
    >
    <!--
      <manifest>
        <attribute name="main-class" value="org.wyona.yarep.examples.HelloWorld"/>
      </manifest>
    -->
    </jar>
  </target>

  <target name="install-jar" description="Place jar into local maven repository" depends="init,jar">
    <copy file="src/core/pom.xml" tofile="build/lib/pom-core.xml"/>
    <replace file="build/lib/pom-core.xml" value="${yarep.version}-r${subversion.revision}">
      <replacetoken>@VERSION@</replacetoken>
    </replace>

    <artifact:pom id="maven.project.core" file="build/lib/pom-core.xml"/>
  
    <artifact:install file="build/lib/yarep-core-${yarep.version}-r${subversion.revision}.jar">
      <pom refid="maven.project.core"/>
    </artifact:install>

    <copy file="src/impl/pom.xml" tofile="build/lib/pom-impl.xml"/>
    <replace file="build/lib/pom-impl.xml" value="${yarep.version}-r${subversion.revision}">
      <replacetoken>@VERSION@</replacetoken>
    </replace>

    <artifact:pom id="maven.project.impl" file="build/lib/pom-impl.xml"/>
  
    <artifact:install file="build/lib/yarep-impl-${yarep.version}-r${subversion.revision}.jar">
      <pom refid="maven.project.impl"/>
    </artifact:install>
  </target>

  <target name="clean" description="Clean Build" depends="init">
    <delete dir="${build.dir}"/>
  </target>

  <target name="run-examples" description="Run Example" depends="init, build-examples">
    <java classname="org.wyona.yarep.examples.HelloWorld">
      <classpath refid="classpath.run"/>
    </java>
  </target>

  <!-- the test target executes all tests in the test directory, or alternatively
       it executes a single test which is specified by the test.class.name property -->
  <target name="test" description="Run Tests" depends="init, build-examples">
    <mkdir dir="build/log"/>
    <junit fork="yes" printsummary="yes" haltonfailure="no" showoutput="yes" failureproperty="tests.failed">
      <formatter type="plain" usefile="false" />
      <formatter type="xml"/>
      <classpath refid="classpath.run" />
      <batchtest todir="build/log" unless="test.class.name">
        <fileset dir="${classes.dir}" includes="**/*Test.class" excludes="**/Abstract*.class"/>
      </batchtest>
      <test todir="build/log" name="${test.class.name}" if="test.class.name"/>
    </junit>
    <fail if="tests.failed"  message="One or more junit tests failed. Please check the log (build/log)."/>
  </target>

  <target name="javadoc" description="Generate Javadoc" depends="init">
    <javadoc
      packagenames="org.*"
      sourcepath="src/core/java"
      destdir="build/javadoc"
    >
    </javadoc>
  </target>

</project>
